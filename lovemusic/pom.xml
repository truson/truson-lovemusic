<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--项目基本信息配置-->
    <groupId>com.truson</groupId>
    <artifactId>truson-lovemusic</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>lovemusic</name>
    <packaging>war</packaging><!--The current core packaging values are: pom, jar, maven-plugin, ejb, war, ear, rar, par-->

    <!--定义变量-->
    <properties>
        <encoding>UTF-8</encoding>
        <jdk.version>1.8</jdk.version>
        <spring.version>4.1.6.RELEASE</spring.version>
    </properties>

    <profiles>
        <!--本地配置方案-->
        <profile>
            <id>local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!--数据库连接配置-->
                <base.datasource.type>bonecp</base.datasource.type>
                <base.jdbc.jdbcUrl>jdbc:mysql://localhost:3306/lovemusic?autoReconnect=true&amp;characterEncoding=UTF-8</base.jdbc.jdbcUrl>
                <base.jdbc.username>root</base.jdbc.username>
                <base.jdbc.password>zxczxc</base.jdbc.password>
            </properties>
        </profile>
        <!--做个样子......-->
        <profile>
            <id>remote</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <base.jdbc.username>XXX</base.jdbc.username>
                <base.jdbc.password>XXX</base.jdbc.password>
            </properties>
        </profile>
    </profiles>

    <!--jar包依赖-->
    <dependencies>
        <!--对于J2SE而言，servlet是需要自己加的-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
        </dependency>
        <!--spring配置，虽然只定义了jdbc和mvc，但他们有自己的依赖关系，所以会自动加载core、context等-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!--apache基本操作辅助包-->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>
        <!--BoneCP数据库连接池-->
        <dependency>
            <groupId>com.jolbox</groupId>
            <artifactId>bonecp</artifactId>
            <version>0.8.0.RELEASE</version>
        </dependency>
        <!--mysql驱动-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.36</version>
        </dependency>
        <!--spring集成mybatis-->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>1.2.2</version>
        </dependency>
        <!--todo 为什么mybatis-spring中也引入了mybatis，还需要自己在这里再添加依赖？-->
        <!--答：scope compile和provided的差别-->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.2.3</version>
        </dependency>
        <!--淘宝开放平台sdk（短信支持）-->
        <dependency>
            <groupId>com.taobao</groupId>
            <artifactId>taobao-sdk-java-auto</artifactId>
            <version>1.0.0</version>
        </dependency>
        <!--解决springMVC @ResponseBody返回Map等数据对象，页面抛出406错误的问题，但据说jackson效率不高诶-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.2.3</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.2.3</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.2.3</version>
        </dependency>
        <!--集成Junit todo 但为什么spring test不能直接引入这个依赖呢？scope不是compile吗？-->
        <!--答：optional true，中断依赖传递-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!--不配置这个无法将pom文件中定义的properties加载到其他配置文件中（如spring配置文件）-->
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!--如果项目中不配置maven-compiler-plugin使用的jdk版本，则会使用该插件默认jdk版本-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <encoding>${encoding}</encoding>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <encoding>${encoding}</encoding>
                </configuration>
            </plugin>
            <!-- 配置构建时忽略测试用例 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>